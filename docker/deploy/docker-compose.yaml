# version: '3.7'
services:

#  dbt:
    #build: .
    # image: quay.io/larryloi/dbt-mysql:0.1.0
    # image: quay.io/larryloi/dbt-mssql:0.1.0
    #image: quay.io/larryloi/dbt-starrocks:1.8.0c
    # image: ${IMAGE_REPO_ROOT}/${PROJECT_NAME}-${DEV_DB_TYPE}:${APP_VERSION}
    #image: ${IMAGE_REPO_ROOT}/${PROJECT_NAME}:${APP_VERSION}-${IMAGE_TAG}
#     image: ${DEV_IMAGE}
#     environment:
#       - TZ=Asia/Macau
#     #profiles: ["starrocks","mssql","all"]
#     networks:
#       - development
#     volumes:
#       - ../../test/.dbt/:/root/.dbt/
#       - ../../test/:/dbt
#     working_dir: /dbt
#     entrypoint: /bin/bash
#     stdin_open: true
#     tty: true



  dbt:
#     image: quay.io/larryloi/dbt-starrocks:1.7.0-rc.2
    image: ${DEV_IMAGE}
    container_name: dbt
    ports:
      - "3000:3000"
      - "4000:4000"
    expose:
      - "3000"
      - "4000"
    environment:
      TZ: "Asia/Macau"
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - ../../test/dbt/.dbt/:/root/.dbt/
      - ../../test/dbt/:/opt/dbt
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - ../../test/dagster:/opt/dagster
#      - ./build/dagster/:/opt/dagster/dagster_home/
    networks:
      - development
    depends_on:
      - psql
    command:
      - /bin/bash
      - -c
      - |
        dagster api grpc -h 0.0.0.0 -p 4000 -f ${DAGSTER_APP_HOME}/repo.py & 
        while ! nc -z 0.0.0.0 4000; do echo 'Waiting for api grpc...'; sleep 1; done;
        dagster-webserver -h "0.0.0.0" -p "3000" -w ${DAGSTER_HOME}/workspace.yaml &
        while ! nc -z 0.0.0.0 3000; do echo 'Waiting for webserver...'; sleep 1; done;
        /usr/local/bin/python3.10 /usr/local/bin/dagster-daemon run


  psql:
    image: postgres:15
    container_name: psql
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    ports:
      - "5432:5432"
    networks:
      - development
    volumes:
      - psql-data:/var/lib/postgresql

volumes:
  psql-data:

networks:
  development:
    driver: bridge

